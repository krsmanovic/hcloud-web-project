#cloud-config

# users configuration
users:
  - name: ${ops_user_name}
    gecos: Operations user
    groups: users, admin
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - ${ops_public_key}

# apt configuration
package_update: true
package_upgrade: true
package_reboot_if_required: false
apt:
  preserve_sources_list: true
  sources:
    php.list:
      source: "ppa:ondrej/php"

# disable password authentication for root user
ssh_pwauth: false

# install required packages
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - dos2unix
  - git
  - gnupg-agent
  - iptraf-ng
  - jq
  - libblockdev-mdraid2 # udisksd[572]: Failed to load the 'mdraid' libblockdev plugin
  - mtr
  - net-tools
  - nginx
  - nmap
  - postgresql
  - postgresql-contrib
  - redis-server
  - software-properties-common
  - tree
  - whois
  - zip
  # certbot
  - certbot
  - python3-certbot-nginx
  # php modules
  - imagemagick
  - php-imagick
  - php${php_version}-common
  - php${php_version}-pgsql
  - php${php_version}-fpm
  - php${php_version}-gd
  - php${php_version}-curl
  - php${php_version}-imagick
  - php${php_version}-zip
  - php${php_version}-xml
  - php${php_version}-mbstring
  - php${php_version}-bz2
  - php${php_version}-intl
  - php${php_version}-bcmath
  - php${php_version}-gmp
  - php${php_version}-redis

# set hostname
hostname: ${server_name}

# render required files
write_files:
- path: /tmp/pg.sql
  encoding: b64
  owner: postgres:postgres
  permissions: "0755"
  defer: true
  content: ${posgresql_setup}
- path: /etc/nginx/sites-available/nextcloud.conf
  encoding: b64
  content: ${nginx_config}
- path: /root/nextcloud-install.sh
  encoding: b64
  permissions: "0755"
  defer: true
  content: ${nextcloud_install}
- path: /root/redis-tweak
  permissions: "0644"
  defer: true
  content: |
    # maximum memory allowed for redis
    maxmemory 1000M
    # how redis will evice old objects - least recently used
    maxmemory-policy allkeys-lru

# execute commands on the first boot
runcmd:
  # root user setup
  - echo "source /root/.profile" >> /root/.bash_profile
  - echo "0 12 * * * /usr/bin/certbot renew --quiet" >> /var/spool/cron/crontabs/root
  # ufw
  - ufw allow OpenSSH
  - ufw allow "Nginx Full"
  - ufw --force enable
  # sshd
  - sed -i 's/#ClientAliveInterval 0/ClientAliveInterval 60/' /etc/ssh/sshd_config
  - sed -i 's/#ClientAliveCountMax 3/ClientAliveCountMax 3/' /etc/ssh/sshd_config
  # posgresl
  - sudo -u postgres psql -U postgres postgres -a -f /tmp/pg.sql
  # fix CR LF control characters in case we originate from Windows dev machine
  - dos2unix /root/nextcloud-install.sh
  # php
  - sed -i 's/memory_limit = 128M/memory_limit = 512M/g' /etc/php/${php_version}/fpm/php.ini
  - sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 1024M/g' /etc/php/${php_version}/fpm/php.ini
  - sed -i 's/;clear_env = no/clear_env = no/g' /etc/php/${php_version}/fpm/pool.d/www.conf
  - sed -i 's/pm = dynamic/pm = static/' /etc/php/${php_version}/fpm/pool.d/www.conf
  - sed -i 's/pm.max_children = 5/pm.max_children = 50/' /etc/php/${php_version}/fpm/pool.d/www.conf
  # nginx
  - rm -rf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default
  - ln -s /etc/nginx/sites-available/nextcloud.conf /etc/nginx/sites-enabled/
  - systemctl restart nginx
  # redis
  - mkdir -p /var/run/redis/
  - chown -R redis:www-data /var/run/redis /var/log/redis
  - cat /root/redis-tweak | sudo tee -a /etc/redis/redis.conf
  - rm -rf /root/redis-tweak
  - sed -i "s/^port.*/port 0/" /etc/redis/redis.conf
  - sed -i "s|# unixsocket /run/redis/redis-server.sock|unixsocket /run/redis/redis-server.sock|" /etc/redis/redis.conf
  - sed -i "s/# unixsocketperm.*/unixsocketperm 770/" /etc/redis/redis.conf
  - sed -i "s/# supervised auto/supervised systemd/" /etc/redis/redis.conf
  - echo 'vm.overcommit_memory = 1' | sudo tee -a /etc/sysctl.conf
  # certbot
  - certbot --nginx -d ${domain} --non-interactive --agree-tos -m ${cert_email} --redirect

# reboot
power_state:
 mode: reboot
 message: Rebooting the system to finalize software installation
 timeout: 30
 condition: True

final_message: "*** System setup is complete, after $UPTIME seconds ***"
